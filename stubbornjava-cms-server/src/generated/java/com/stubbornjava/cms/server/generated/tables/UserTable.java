/*
 * This file is generated by jOOQ.
 */
package com.stubbornjava.cms.server.generated.tables;


import com.stubbornjava.cms.server.generated.Indexes;
import com.stubbornjava.cms.server.generated.Keys;
import com.stubbornjava.cms.server.generated.SjCms;
import com.stubbornjava.cms.server.generated.tables.records.UserRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserTable extends TableImpl<UserRecord> {

    private static final long serialVersionUID = -334397364;

    /**
     * The reference instance of <code>sj_cms.user</code>
     */
    public static final UserTable USER = new UserTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserRecord> getRecordType() {
        return UserRecord.class;
    }

    /**
     * The column <code>sj_cms.user.user_id</code>.
     */
    public final TableField<UserRecord, Long> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>sj_cms.user.email_hash</code>.
     */
    public final TableField<UserRecord, String> EMAIL_HASH = createField("email_hash", org.jooq.impl.SQLDataType.CHAR(32).nullable(false), this, "");

    /**
     * The column <code>sj_cms.user.email</code>.
     */
    public final TableField<UserRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "");

    /**
     * The column <code>sj_cms.user.active</code>.
     */
    public final TableField<UserRecord, Boolean> ACTIVE = createField("active", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>sj_cms.user.date_created_ts</code>.
     */
    public final TableField<UserRecord, LocalDateTime> DATE_CREATED_TS = createField("date_created_ts", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>sj_cms.user.date_updated_ts</code>.
     */
    public final TableField<UserRecord, LocalDateTime> DATE_UPDATED_TS = createField("date_updated_ts", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * Create a <code>sj_cms.user</code> table reference
     */
    public UserTable() {
        this(DSL.name("user"), null);
    }

    /**
     * Create an aliased <code>sj_cms.user</code> table reference
     */
    public UserTable(String alias) {
        this(DSL.name(alias), USER);
    }

    /**
     * Create an aliased <code>sj_cms.user</code> table reference
     */
    public UserTable(Name alias) {
        this(alias, USER);
    }

    private UserTable(Name alias, Table<UserRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserTable(Name alias, Table<UserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> UserTable(Table<O> child, ForeignKey<O, UserRecord> key) {
        super(child, key, USER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SjCms.SJ_CMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_EMAIL_HASH_IDX, Indexes.USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserRecord, Long> getIdentity() {
        return Keys.IDENTITY_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserRecord> getPrimaryKey() {
        return Keys.KEY_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserRecord>> getKeys() {
        return Arrays.<UniqueKey<UserRecord>>asList(Keys.KEY_USER_PRIMARY, Keys.KEY_USER_EMAIL_HASH_IDX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserTable as(String alias) {
        return new UserTable(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserTable as(Name alias) {
        return new UserTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserTable rename(String name) {
        return new UserTable(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserTable rename(Name name) {
        return new UserTable(name, null);
    }
}
